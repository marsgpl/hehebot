<% bots.forEach(metrics => { %>
<table border class="DataTable">
    <thead>
        <tr>
            <th colspan="2" data-pid="<%= metrics['Player ID'] %>">
                <span class="marker" data-visible="▼" data-hidden="▶">▼</span>
                <%= metrics['Player'] %>
                <span class="task"><%= metrics['Task'] %></span>
            </th>
        </tr>
    </thead>

    <tbody id="pid-<%= metrics['Player ID'] %>">
        <% for (const key in metrics) {
            if (
                key === 'Player' ||
                key === 'Player ID' ||
                key === 'Task'
            ) continue;
            const value = metrics[key];
        %>
            <tr>
                <td class="Key"><%= key %></td>
                <td>
                    <% if (key === 'Debug') { %>
                        <div class="hidden-handle">
                            <span class="hidden-handle_text">show</span>
                            <span class="hidden-handle_content">
                        <% } %>
                            <%= (typeof value !== 'string' ? JSON.stringify(value) : value) %>
                        <% if (key === 'Debug') { %>
                            </span>
                        </div>
                    <% } %>
                </td>
            </tr>
        <% } %>
    </tbody>
</table>
<% }); %>

<style>
    body {
        margin: 0;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
            Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        font-size: 16px;
    }
    .DataTable {
        width: 100%;
        border-collapse: collapse;
        border: 1px solid #ddd;
    }
    .DataTable + .DataTable {
        margin-top: -1px;
    }
    .DataTable th {
        user-select: none;
        background: #f4f4f4;
        cursor: pointer;
        line-height: 20px;
    }
    .DataTable th, td {
        padding: 15px;
        word-break: break-word;
        text-align: left;
        vertical-align: top;
    }
    .DataTable .Key {
        width: 140px;
    }
    .hidden-handle_text {
        display: inline-block;
        cursor: pointer;
        padding: 15px;
        margin: -15px;
        user-select: none;
    }
    .hidden-handle_content {
        display: none;
    }
    .marker {
        width: 20px;
        display: inline-block;
    }
    .task {
        display: inline-block;
        margin-left: 20px;
        color: #666;
        font-weight: normal;
    }
</style>

<script>
    window.addEventListener('DOMContentLoaded', (event) => {
        const showHandles = document.querySelectorAll('.hidden-handle');

        showHandles.forEach(handle => {
            const text = handle.querySelector('.hidden-handle_text');
            const content = handle.querySelector('.hidden-handle_content');

            text.addEventListener('click', () => {
                text.style.display = 'none';
                content.style.display = 'block';
            });
        });

        const ths = document.querySelectorAll('th');

        ths.forEach(th => {
            const pid = th.dataset.pid;
            const marker = th.querySelector('.marker');
            const tbody = document.querySelector('#pid-' + pid);
            if (!pid || !marker || !tbody) return;
            th.addEventListener('click', () => {
                if (tbody.style.display === 'none') {
                    tbody.style.display = 'table-row-group';
                    marker.innerText = marker.dataset.visible;
                } else {
                    tbody.style.display = 'none';
                    marker.innerText = marker.dataset.hidden;
                }
            });
        });
    });
</script>
